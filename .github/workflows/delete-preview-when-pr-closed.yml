name: Delete Preview on Closed Pull Requests
on:
  pull_request:
    types: [closed]
  workflow_dispatch:
    inputs:
      service_name:
        description: 'The name of the service to delete, usually a PR number.'
        required: true

jobs:
  delete-deploy:
    name: Delete the deployment
    concurrency: delete-${{ github.event.pull_request.number || github.event.inputs.service_name }}
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
      - name: Set outputs
        id: vars
        run: |
          echo "::set-output name=sha_short::$(git rev-parse --short=8 HEAD)"
          echo "::set-output name=ref_short::$(echo ${{ github.ref }} | cut -d / -f 3- | sed -e 's/[^a-zA-Z0-9_]/_/g')"
          echo "::set-output name=service_name::${{ github.event.pull_request.number || github.event.inputs.service_name }}"

      - name: Slack - Deployment Beginning
        uses: archive/github-actions-slack@v2.2.1
        id: send-message
        with:
          slack-function: send-message
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: C02A6RXJWPL
          slack-text: |
            <https://github.com/SlideShareCorp/slideshare-web-app/pull/${{github.event.pull_request.number}}|${{ github.event.pull_request.number }}>: ${{ github.head_ref }}
                <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}|Deleting Preview>: :hammerping:

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: servicediscovery-service
        id: servicediscovery-service
        uses: scribd/amazon-servicediscovery-service-action@v1
        with:
          name: ${{ steps.vars.outputs.service_name }}
          dns-config: |
            {
              "NamespaceId": "ns-hyzs5h6n4todx4t7",
              "RoutingPolicy": "MULTIVALUE",
              "DnsRecords": [
                  {
                      "Type": "SRV",
                      "TTL": 10
                  }
              ]
            }

      - name: Delete Service
        uses: scribd/amazon-ecs-service-action@v1
        with:
          action: delete
          spec: |
            {
              "cluster": "appmesh-staging",
              "serviceName": "${{ steps.vars.outputs.service_name }}"
            }

      - name: delete servicediscovery-service
        id: delete-servicediscovery-service
        uses: scribd/amazon-servicediscovery-service-action@v1
        with:
          id: ${{ steps.servicediscovery-service.outputs.id }}
          action: delete

      - name: appmesh-route
        uses: scribd/amazon-appmesh-route-action@v1
        with:
          name: ${{ steps.vars.outputs.service_name}}
          mesh-name: staging-mesh
          virtual-router-name: ${{ steps.vars.outputs.service_name }}
          action: delete

      - name: appmesh-virtual-node
        uses: scribd/amazon-appmesh-virtual-node-action@v1
        with:
          name: ${{ steps.vars.outputs.service_name }}
          mesh-name: staging-mesh
          action: delete

      - name: appmesh-virtual-gateway-route
        uses: scribd/amazon-appmesh-virtual-gateway-route-action@v1
        with:
          name: ${{ steps.vars.outputs.service_name }}
          mesh-name: staging-mesh
          virtual-gateway-name: slideshare-ei-net
          action: delete

      - name: appmesh-virtual-service
        uses: scribd/amazon-appmesh-virtual-service-action@v1
        with:
          name: ${{ steps.vars.outputs.service_name }}.staging-mesh.slideshare-ei.net
          mesh-name: staging-mesh
          action: delete

      - name: appmesh-virtual-router
        uses: scribd/amazon-appmesh-virtual-router-action@v1
        with:
          name: ${{ steps.vars.outputs.service_name }}
          mesh-name: staging-mesh
          action: delete

      - uses: archive/github-actions-slack@v2.2.1
        if: ${{ failure() }}
        with:
          slack-function: update-message
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: C02A6RXJWPL
          slack-update-message-ts: ${{ fromJson(steps.send-message.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            <https://github.com/SlideShareCorp/slideshare-web-app/pull/${{github.event.pull_request.number}}|${{ github.event.pull_request.number }}>: ${{ github.head_ref }}
                <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}|Deleting Preview>: :dead:
                <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}|INVESTIGATE>

      - uses: archive/github-actions-slack@v2.2.1
        if: ${{ success() }}
        with:
          slack-function: update-message
          slack-bot-user-oauth-access-token: ${{ secrets.SLACK_BOT_USER_OAUTH_ACCESS_TOKEN }}
          slack-channel: C02A6RXJWPL
          slack-update-message-ts: ${{ fromJson(steps.send-message.outputs.slack-result).response.message.ts }}
          slack-update-message-text: |
            <https://github.com/SlideShareCorp/slideshare-web-app/pull/${{github.event.pull_request.number}}|${{ github.event.pull_request.number }}>: ${{ github.head_ref }}
                <https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id}}|Deleting Preview>: :heavy_check_mark: