name: Configures AppMesh
on:
  workflow_call:
    inputs:
      name: # 
        required: true
        type: string
      servicediscovery-namespace-id: # ns-12345
        required: true
        type: string
      servicediscovery-namespace-name: # pr-preview-mesh.example.com
        required: true
        type: string
      mesh-name: # pr-preview-mesh
        required: true
        type: string
      virtual-gateway-name:
        required: true
        type: string
      virtual-node-spec:
        required: false
        type: string
        default: |
          {
            "listeners": [
              {
                "portMapping": {
                  "port": 8080,
                  "protocol": "http"
                },
                "healthCheck": {
                  "protocol": "tcp",
                  "port": 8080,
                  "healthyThreshold": 2,
                  "unhealthyThreshold": 2,
                  "timeoutMillis": 2000,
                  "intervalMillis": 5000
                }
              }
            ],
            "serviceDiscovery": {
              "awsCloudMap": {
                "namespaceName": "${{ inputs.servicediscovery-namespace-name }}",
                "serviceName": "${{ inputs.name }}"
              }
            },
            "logging": {
              "accessLog": {
                "file": {
                  "path": "/dev/stdout"
                }
              }
            }
          }
      
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true


jobs:
  configure-appmesh:
    name: Configure AppMesh
    concurrency: cd-${{ github.ref }}
    runs-on: ubuntu-18.04
    needs:
      - build
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registries: 1234567890

      - name: servicediscovery-service
        id: servicediscovery-service
        uses: scribd/amazon-servicediscovery-service-action@v1
        with:
          name: ${{ inputs.name }}
          dns-config: |
            {
              "NamespaceId": "${{ inputs.servicediscovery-namespace-id }}",
              "RoutingPolicy": "MULTIVALUE",
              "DnsRecords": [
                  {
                      "Type": "SRV",
                      "TTL": 10
                  }
              ]
            }

      - name: appmesh-virtual-node
        uses: scribd/amazon-appmesh-virtual-node-action@v1
        with:
          name: ${{ inputs.name }}
          mesh-name: ${{ inputs.mesh-name }}
          spec: ${{ inputs.virtual-node-spec }}

      - name: appmesh-virtual-router
        uses: scribd/amazon-appmesh-virtual-router-action@v1
        with:
          name: ${{ inputs.name }}
          mesh-name: ${{ inputs.mesh-name }}
          spec: |
            {
              "listeners": [
                  {
                      "portMapping": {
                          "port": 80,
                          "protocol": "http"
                      }
                  }
              ]
            }

      - name: appmesh-route
        uses: scribd/amazon-appmesh-route-action@v1
        with:
          name: ${{ inputs.name }}
          mesh-name: ${{ inputs.mesh-name }}
          virtual-router-name: ${{ inputs.name }}
          spec: |
            {
              "httpRoute": {
                "action": {
                    "weightedTargets": [
                        {
                            "virtualNode": "${{ inputs.name }}",
                            "weight": 1
                        }
                    ]
                },
                "match": {
                    "prefix": "/"
                }
              }
            }

      - name: appmesh-virtual-service
        uses: scribd/amazon-appmesh-virtual-service-action@v1
        with:
          name: ${{ inputs.name }}.${{ inputs.servicediscovery-namespace-name }}
          mesh-name: ${{ inputs.mesh-name }}
          spec: |
            {
              "provider": {
                "virtualRouter": {
                    "virtualRouterName": "${{ inputs.name }}"
                }
              }
            }

      - name: appmesh-virtual-gateway-route
        uses: scribd/amazon-appmesh-virtual-gateway-route-action@v1
        with:
          name: ${{ inputs.name }}
          mesh-name: ${{ inputs.mesh-name }}
          virtual-gateway-name: ${{ inputs.virtual-gateway-name }}
          spec: |
            {
              "httpRoute": {
                "action": {
                  "target": {
                    "virtualService": {
                      "virtualServiceName": "${{ inputs.name }}.${{ inputs.servicediscovery-namespace-name }}"
                    }
                  },
                  "rewrite": {
                    "hostname": {
                      "defaultTargetHostname": "DISABLED"
                    }
                  }
                },
                "match": {
                  "hostname": {
                    "exact": "${{ inputs.name }}.${{ inputs.servicediscovery-namespace-name }}"
                  }
                }
              }
            }

